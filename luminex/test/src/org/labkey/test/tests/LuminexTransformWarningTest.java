package org.labkey.test.tests;

import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.labkey.test.Locator;
import org.labkey.test.Locators;
import org.labkey.test.SortDirection;
import org.labkey.test.TestFileUtils;
import org.labkey.test.categories.Assays;
import org.labkey.test.categories.DailyA;
import org.labkey.test.categories.InDevelopment;
import org.labkey.test.categories.LuminexAll;
import org.labkey.test.pages.AssayDomainEditor;
import org.labkey.test.util.DataRegionTable;

import static org.junit.Assert.assertEquals;

@Category({InDevelopment.class/*, Assays.class, DailyA.class, LuminexAll.class*/})
public final class LuminexTransformWarningTest extends LuminexTest
{
    @Test
    public void testJavaTransformWarning()
    {
        goToTestAssayHome();
        AssayDomainEditor assayDesigner = _assayHelper.clickEditAssayDesign();
        assayDesigner.addTransformScript(TestFileUtils.getSampleData("qc/transformWarning.jar"));
        assayDesigner.saveAndClose();

        goToTestAssayHome();
        clickButton("Import Data");
        setFormElement(Locator.name("species"), TEST_ASSAY_LUM_SET_PROP_SPECIES);
        clickButton("Next");
        setFormElement(Locator.name("name"), "transformed assayId");
        setFormElement(Locator.name("__primaryFile__"), TEST_ASSAY_LUM_FILE1);
        clickButton("Next", 60000);

        clickButton("Save and Finish");
        assertElementPresent(Locators.labkeyError.containing("Inline warning"));

        // verify the description error was generated by the transform script
        clickAndWait(Locator.linkWithText("transformed assayId"), longWaitForPage);

        DataRegionTable table = new DataRegionTable("Data", this);
        table.setSort("Description", SortDirection.ASC);
        assertEquals("Transformed", table.getDataAsText(0, "Description"));
        table.setSort("Description", SortDirection.DESC);
        assertEquals("Transformed", table.getDataAsText(0, "Description"));
    }

    @Test
    public void testRTransformWarning()
    {
        goToTestAssayHome();
        AssayDomainEditor assayDesigner = _assayHelper.clickEditAssayDesign();
        assayDesigner.addTransformScript(TestFileUtils.getSampleData("qc/assayTransformWarning.R"));
        assayDesigner.saveAndClose();

        goToTestAssayHome();
        clickButton("Import Data");
        setFormElement(Locator.name("species"), TEST_ASSAY_LUM_SET_PROP_SPECIES);
        clickButton("Next");
        setFormElement(Locator.name("name"), "transformed assayId");
        setFormElement(Locator.name("__primaryFile__"), TEST_ASSAY_LUM_FILE1);
        clickButton("Next", 60000);

        clickButton("Save and Finish");
        assertElementPresent(Locators.labkeyError.containing("Inline warning"));

        // verify the description error was generated by the transform script
        clickAndWait(Locator.linkWithText("transformed assayId"), longWaitForPage);

        DataRegionTable table = new DataRegionTable("Data", this);
        table.setSort("Description", SortDirection.ASC);
        assertEquals("Transformed", table.getDataAsText(0, "Description"));
        table.setSort("Description", SortDirection.DESC);
        assertEquals("Transformed", table.getDataAsText(0, "Description"));
    }
}
