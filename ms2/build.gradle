import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.ExternalDependency

plugins {
   id 'org.labkey.build.module'
}

dependencies {
   BuildUtils.addExternalDependency(
      project,
      new ExternalDependency(
         "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}",
         "SQLite JDBC Driver",
         "bitbucket.org",
         "https://bitbucket.org/xerial/sqlite-jdbc/wiki/Home",
         ExternalDependency.APACHE_2_LICENSE_NAME,
         ExternalDependency.APACHE_2_LICENSE_URL,
         "SQLite JDBC Driver"
      )
   )
   implementation "net.sf.opencsv:opencsv:${opencsvVersion}"
   compileOnly "org.projectlombok:lombok:${lombokVersion}"
   annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
   BuildUtils.addLabKeyDependency(project: project, config: "implementation", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "assay"), depProjectConfig: "apiJarFile")

   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "assay"), depProjectConfig: "published", depExtension: "module")
   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "experiment"), depProjectConfig: "published", depExtension: "module")
   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "pipeline"), depProjectConfig: "published", depExtension: "module")
   BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: BuildUtils.getPlatformModuleProjectPath(project.gradle, "query"), depProjectConfig: "published", depExtension: "module")
}

sourceSets {
   main {
      resources {
         srcDirs = ['src'] // src is included because it contains some xml files
         exclude '**/*.java'
         exclude '**/*.jsp'
      }
   }
}

